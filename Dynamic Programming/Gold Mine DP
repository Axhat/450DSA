// Problem Link : https://practice.geeksforgeeks.org/problems/gold-mine-problem2608/1

#include <bits/stdc++.h>
using namespace std;

class Solution{
public:
    int maxGold(int n, int m, vector<vector<int>> M)
    {
        // code here
        int dp[n][m]  , i , j , k , ru , rd , rr ; 
        // for(i = 0 ; i < n ; i++) 
        //   dp[i][m-1] = M[i][m-1] ; 
        
        for(j = m-1 ; j>=0 ; j--)  {
            for(i = n-1 ; i>=0 ; i-- )  {
                //rr
                rr = (j+1 < m ) ? dp[i][j+1] : 0 ; 
                //ru
                ru = (i-1>=0 && j+1 < m ) ? dp[i-1][j+1] : 0 ; 
                //rd
                rd = (i+1<n && j+1 < m) ? dp[i+1][j+1] : 0 ; 
                
                dp[i][j] = M[i][j] + max(rr , max(ru , rd)) ; 
            }
        }
        
        int ans = 0 ; 
        for(i = 0 ; i < n ; i++) 
           ans = max(ans , dp[i][0]) ; 
        
        return ans ; 
    }
};

int main(){
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        vector<vector<int>> M(n, vector<int>(m, 0));
        for(int i = 0;i < n;i++){
            for(int j = 0;j < m;j++)
                cin>>M[i][j];
        }
        
        Solution ob;
        cout<<ob.maxGold(n, m, M)<<"\n";
    }
    return 0;
} 
